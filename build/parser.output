Terminais sem uso na gramática

   TK_PR_INT
   TK_PR_FLOAT
   TK_PR_BOOL
   TK_PR_CHAR
   TK_PR_STRING
   TK_PR_IF
   TK_PR_THEN
   TK_PR_ELSE
   TK_PR_WHILE
   TK_PR_DO
   TK_PR_INPUT
   TK_PR_OUTPUT
   TK_PR_RETURN
   TK_PR_CONST
   TK_PR_STATIC
   TK_PR_FOREACH
   TK_PR_FOR
   TK_PR_SWITCH
   TK_PR_CASE
   TK_PR_BREAK
   TK_PR_CONTINUE
   TK_PR_CLASS
   TK_PR_PRIVATE
   TK_PR_PUBLIC
   TK_PR_PROTECTED
   TK_OC_LE
   TK_OC_GE
   TK_OC_EQ
   TK_OC_NE
   TK_OC_AND
   TK_OC_OR
   TK_OC_SL
   TK_OC_SR
   TK_LIT_FLOAT
   TK_LIT_CHAR
   TK_LIT_STRING
   TK_IDENTIFICADOR
   TOKEN_ERRO


Gramática

    0 $accept: programa $end

    1 programa: %empty
    2         | programa def_new_type
    3         | programa def_global_var
    4         | programa def_funcs

    5 def_new_type: TK_LIT_INT TK_LIT_FALSE

    6 def_global_var: TK_LIT_FALSE

    7 def_funcs: TK_LIT_TRUE


Terminais, com as regras onde eles aparecem

$end (0) 0
error (256)
TK_PR_INT (258)
TK_PR_FLOAT (259)
TK_PR_BOOL (260)
TK_PR_CHAR (261)
TK_PR_STRING (262)
TK_PR_IF (263)
TK_PR_THEN (264)
TK_PR_ELSE (265)
TK_PR_WHILE (266)
TK_PR_DO (267)
TK_PR_INPUT (268)
TK_PR_OUTPUT (269)
TK_PR_RETURN (270)
TK_PR_CONST (271)
TK_PR_STATIC (272)
TK_PR_FOREACH (273)
TK_PR_FOR (274)
TK_PR_SWITCH (275)
TK_PR_CASE (276)
TK_PR_BREAK (277)
TK_PR_CONTINUE (278)
TK_PR_CLASS (279)
TK_PR_PRIVATE (280)
TK_PR_PUBLIC (281)
TK_PR_PROTECTED (282)
TK_OC_LE (283)
TK_OC_GE (284)
TK_OC_EQ (285)
TK_OC_NE (286)
TK_OC_AND (287)
TK_OC_OR (288)
TK_OC_SL (289)
TK_OC_SR (290)
TK_LIT_INT (291) 5
TK_LIT_FLOAT (292)
TK_LIT_FALSE (293) 5 6
TK_LIT_TRUE (294) 7
TK_LIT_CHAR (295)
TK_LIT_STRING (296)
TK_IDENTIFICADOR (297)
TOKEN_ERRO (298)


Não terminais com as regras onde eles aparecem

$accept (44)
    à esquerda: 0
programa (45)
    à esquerda: 1 2 3 4, à direita: 0 2 3 4
def_new_type (46)
    à esquerda: 5, à direita: 2
def_global_var (47)
    à esquerda: 6, à direita: 3
def_funcs (48)
    à esquerda: 7, à direita: 4


Estado 0

    0 $accept: . programa $end

    $padrão  reduzir usando a regra 1 (programa)

    programa  ir ao estado 1


Estado 1

    0 $accept: programa . $end
    2 programa: programa . def_new_type
    3         | programa . def_global_var
    4         | programa . def_funcs

    $end          deslocar, e ir ao estado 2
    TK_LIT_INT    deslocar, e ir ao estado 3
    TK_LIT_FALSE  deslocar, e ir ao estado 4
    TK_LIT_TRUE   deslocar, e ir ao estado 5

    def_new_type    ir ao estado 6
    def_global_var  ir ao estado 7
    def_funcs       ir ao estado 8


Estado 2

    0 $accept: programa $end .

    $padrão  aceitar


Estado 3

    5 def_new_type: TK_LIT_INT . TK_LIT_FALSE

    TK_LIT_FALSE  deslocar, e ir ao estado 9


Estado 4

    6 def_global_var: TK_LIT_FALSE .

    $padrão  reduzir usando a regra 6 (def_global_var)


Estado 5

    7 def_funcs: TK_LIT_TRUE .

    $padrão  reduzir usando a regra 7 (def_funcs)


Estado 6

    2 programa: programa def_new_type .

    $padrão  reduzir usando a regra 2 (programa)


Estado 7

    3 programa: programa def_global_var .

    $padrão  reduzir usando a regra 3 (programa)


Estado 8

    4 programa: programa def_funcs .

    $padrão  reduzir usando a regra 4 (programa)


Estado 9

    5 def_new_type: TK_LIT_INT TK_LIT_FALSE .

    $padrão  reduzir usando a regra 5 (def_new_type)
