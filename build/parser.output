Terminals unused in grammar

   TOKEN_ERRO


Rules useless in parser due to conflicts

   90 optional_array_modifier: %empty


State 23 conflicts: 1 shift/reduce
State 47 conflicts: 1 shift/reduce
State 74 conflicts: 1 shift/reduce, 23 reduce/reduce
State 81 conflicts: 1 shift/reduce
State 84 conflicts: 1 shift/reduce
State 134 conflicts: 10 shift/reduce
State 135 conflicts: 1 shift/reduce
State 136 conflicts: 10 reduce/reduce
State 137 conflicts: 10 reduce/reduce
State 139 conflicts: 1 shift/reduce
State 167 conflicts: 10 shift/reduce
State 171 conflicts: 1 shift/reduce
State 203 conflicts: 1 shift/reduce


Grammar

    0 $accept: programa $end

    1 programa: %empty
    2         | def_type programa
    3         | optional_static def_global_var_or_def_function programa

    4 def_global_var_or_def_function: def_global_var
    5                               | def_function

    6 def_type: TK_PR_CLASS TK_IDENTIFICADOR '[' type_fields ']' ';'

    7 type_fields: type_field more_fields

    8 more_fields: %empty
    9            | ':' type_field more_fields

   10 type_field: encapsulation primitive_type TK_IDENTIFICADOR optional_vector_modifier

   11 encapsulation: TK_PR_PROTECTED
   12              | TK_PR_PRIVATE
   13              | TK_PR_PUBLIC

   14 def_global_var: any_type TK_IDENTIFICADOR optional_vector_modifier ';'

   15 optional_vector_modifier: '[' TK_LIT_INT ']'
   16                         | %empty

   17 def_function: header body

   18 header: any_type TK_IDENTIFICADOR '(' parameters ')'

   19 body: '{' command_sequence '}'

   20 command_sequence: %empty
   21                 | command_in_block command_sequence

   22 command_in_block: simple_command ';'
   23                 | action_command

   24 simple_command: TK_IDENTIFICADOR command_proceeding_identifier
   25               | def_local_var
   26               | input_command
   27               | output_command
   28               | body
   29               | flux_command

   30 command_proceeding_identifier: attribution_command
   31                              | func_modifier
   32                              | shift_command

   33 def_local_var: optional_static optional_const def_local_var_tail

   34 def_local_var_tail: TK_IDENTIFICADOR TK_IDENTIFICADOR
   35                   | primitive_type TK_IDENTIFICADOR optional_init

   36 optional_static: %empty
   37                | TK_PR_STATIC

   38 optional_const: %empty
   39               | TK_PR_CONST

   40 optional_init: %empty
   41              | TK_OC_LE expression

   42 attribution_command: '=' expression
   43                    | '[' expression ']' '=' expression
   44                    | '$' TK_IDENTIFICADOR '=' expression

   45 input_command: TK_PR_INPUT expression

   46 output_command: TK_PR_OUTPUT expression expression_sequence

   47 func_modifier: '(' expression_sequence ')'

   48 shift_command: TK_OC_SL TK_LIT_INT
   49              | TK_OC_SR TK_LIT_INT

   50 flux_command: condition_command
   51             | iteration_command
   52             | selection_command

   53 condition_command: TK_PR_IF '(' expression ')' TK_PR_THEN body optional_else

   54 optional_else: %empty
   55              | TK_PR_ELSE body

   56 iteration_command: TK_PR_FOREACH '(' TK_IDENTIFICADOR ':' foreach_expression_sequence ')' body
   57                  | TK_PR_FOR '(' for_command_sequence ':' expression ':' for_command_sequence ')' body
   58                  | TK_PR_WHILE '(' expression ')' TK_PR_DO body
   59                  | TK_PR_DO body TK_PR_WHILE '(' expression ')'

   60 selection_command: TK_PR_SWITCH '(' expression ')' body

   61 for_command_sequence: simple_command optional_extra_for_commands

   62 optional_extra_for_commands: %empty
   63                            | ',' simple_command optional_extra_for_commands

   64 foreach_expression_sequence: expression optional_extra_foreach_expressions

   65 optional_extra_foreach_expressions: %empty
   66                                   | ',' expression optional_extra_foreach_expressions

   67 action_command: TK_PR_RETURN expression ';'
   68               | TK_PR_CONTINUE ';'
   69               | TK_PR_BREAK ';'
   70               | TK_PR_CASE TK_LIT_INT ':'

   71 expression_sequence: %empty
   72                    | ',' expression_sequence
   73                    | expression expression_sequence

   74 expression: literal
   75           | '(' expression ')'
   76           | TK_IDENTIFICADOR func_or_array_modifier
   77           | expression arit_log_operator expression
   78           | unary_arit_log_operator expression

   79 literal: TK_LIT_INT
   80        | TK_LIT_FLOAT
   81        | TK_LIT_CHAR
   82        | TK_LIT_TRUE
   83        | TK_LIT_FALSE
   84        | TK_LIT_STRING

   85 func_or_array_modifier: optional_array_modifier
   86                       | optional_func_modifier

   87 optional_func_modifier: func_modifier
   88                       | %empty

   89 optional_array_modifier: '[' expression ']'
   90                        | %empty

   91 arit_log_operator: log_operator
   92                  | arit_operator

   93 log_operator: TK_OC_LE
   94             | TK_OC_GE
   95             | TK_OC_EQ
   96             | TK_OC_NE
   97             | TK_OC_AND
   98             | TK_OC_OR

   99 arit_operator: '+'
  100              | '-'
  101              | '/'
  102              | '*'

  103 unary_arit_log_operator: '-'
  104                        | '+'

  105 parameters: %empty
  106           | parameter optional_more_parameters

  107 parameter: optional_const any_type TK_IDENTIFICADOR

  108 optional_more_parameters: ',' parameter optional_more_parameters
  109                         | %empty

  110 any_type: primitive_type
  111         | TK_IDENTIFICADOR

  112 primitive_type: TK_PR_INT
  113               | TK_PR_FLOAT
  114               | TK_PR_BOOL
  115               | TK_PR_CHAR
  116               | TK_PR_STRING


Terminals, with rules where they appear

$end (0) 0
'$' (36) 44
'(' (40) 18 47 53 56 57 58 59 60 75
')' (41) 18 47 53 56 57 58 59 60 75
'*' (42) 102
'+' (43) 99 104
',' (44) 63 66 72 108
'-' (45) 100 103
'/' (47) 101
':' (58) 9 56 57 70
';' (59) 6 14 22 67 68 69
'=' (61) 42 43 44
'[' (91) 6 15 43 89
']' (93) 6 15 43 89
'{' (123) 19
'}' (125) 19
error (256)
TK_PR_INT (258) 112
TK_PR_FLOAT (259) 113
TK_PR_BOOL (260) 114
TK_PR_CHAR (261) 115
TK_PR_STRING (262) 116
TK_PR_IF (263) 53
TK_PR_THEN (264) 53
TK_PR_ELSE (265) 55
TK_PR_WHILE (266) 58 59
TK_PR_DO (267) 58 59
TK_PR_INPUT (268) 45
TK_PR_OUTPUT (269) 46
TK_PR_RETURN (270) 67
TK_PR_CONST (271) 39
TK_PR_STATIC (272) 37
TK_PR_FOREACH (273) 56
TK_PR_FOR (274) 57
TK_PR_SWITCH (275) 60
TK_PR_CASE (276) 70
TK_PR_BREAK (277) 69
TK_PR_CONTINUE (278) 68
TK_PR_CLASS (279) 6
TK_PR_PRIVATE (280) 12
TK_PR_PUBLIC (281) 13
TK_PR_PROTECTED (282) 11
TK_OC_LE (283) 41 93
TK_OC_GE (284) 94
TK_OC_EQ (285) 95
TK_OC_NE (286) 96
TK_OC_AND (287) 97
TK_OC_OR (288) 98
TK_OC_SL (289) 48
TK_OC_SR (290) 49
TK_LIT_INT (291) 15 48 49 70 79
TK_LIT_FLOAT (292) 80
TK_LIT_FALSE (293) 83
TK_LIT_TRUE (294) 82
TK_LIT_CHAR (295) 81
TK_LIT_STRING (296) 84
TK_IDENTIFICADOR (297) 6 10 14 18 24 34 35 44 56 76 107 111
TOKEN_ERRO (298)


Nonterminals, with rules where they appear

$accept (59)
    on left: 0
programa (60)
    on left: 1 2 3, on right: 0 2 3
def_global_var_or_def_function (61)
    on left: 4 5, on right: 3
def_type (62)
    on left: 6, on right: 2
type_fields (63)
    on left: 7, on right: 6
more_fields (64)
    on left: 8 9, on right: 7 9
type_field (65)
    on left: 10, on right: 7 9
encapsulation (66)
    on left: 11 12 13, on right: 10
def_global_var (67)
    on left: 14, on right: 4
optional_vector_modifier (68)
    on left: 15 16, on right: 10 14
def_function (69)
    on left: 17, on right: 5
header (70)
    on left: 18, on right: 17
body (71)
    on left: 19, on right: 17 28 53 55 56 57 58 59 60
command_sequence (72)
    on left: 20 21, on right: 19 21
command_in_block (73)
    on left: 22 23, on right: 21
simple_command (74)
    on left: 24 25 26 27 28 29, on right: 22 61 63
command_proceeding_identifier (75)
    on left: 30 31 32, on right: 24
def_local_var (76)
    on left: 33, on right: 25
def_local_var_tail (77)
    on left: 34 35, on right: 33
optional_static (78)
    on left: 36 37, on right: 3 33
optional_const (79)
    on left: 38 39, on right: 33 107
optional_init (80)
    on left: 40 41, on right: 35
attribution_command (81)
    on left: 42 43 44, on right: 30
input_command (82)
    on left: 45, on right: 26
output_command (83)
    on left: 46, on right: 27
func_modifier (84)
    on left: 47, on right: 31 87
shift_command (85)
    on left: 48 49, on right: 32
flux_command (86)
    on left: 50 51 52, on right: 29
condition_command (87)
    on left: 53, on right: 50
optional_else (88)
    on left: 54 55, on right: 53
iteration_command (89)
    on left: 56 57 58 59, on right: 51
selection_command (90)
    on left: 60, on right: 52
for_command_sequence (91)
    on left: 61, on right: 57
optional_extra_for_commands (92)
    on left: 62 63, on right: 61 63
foreach_expression_sequence (93)
    on left: 64, on right: 56
optional_extra_foreach_expressions (94)
    on left: 65 66, on right: 64 66
action_command (95)
    on left: 67 68 69 70, on right: 23
expression_sequence (96)
    on left: 71 72 73, on right: 46 47 72 73
expression (97)
    on left: 74 75 76 77 78, on right: 41 42 43 44 45 46 53 57 58 59
    60 64 66 67 73 75 77 78 89
literal (98)
    on left: 79 80 81 82 83 84, on right: 74
func_or_array_modifier (99)
    on left: 85 86, on right: 76
optional_func_modifier (100)
    on left: 87 88, on right: 86
optional_array_modifier (101)
    on left: 89 90, on right: 85
arit_log_operator (102)
    on left: 91 92, on right: 77
log_operator (103)
    on left: 93 94 95 96 97 98, on right: 91
arit_operator (104)
    on left: 99 100 101 102, on right: 92
unary_arit_log_operator (105)
    on left: 103 104, on right: 78
parameters (106)
    on left: 105 106, on right: 18
parameter (107)
    on left: 107, on right: 106 108
optional_more_parameters (108)
    on left: 108 109, on right: 106 108
any_type (109)
    on left: 110 111, on right: 14 18 107
primitive_type (110)
    on left: 112 113 114 115 116, on right: 10 35 110


State 0

    0 $accept: . programa $end

    TK_PR_STATIC  shift, and go to state 1
    TK_PR_CLASS   shift, and go to state 2

    $end      reduce using rule 1 (programa)
    $default  reduce using rule 36 (optional_static)

    programa         go to state 3
    def_type         go to state 4
    optional_static  go to state 5


State 1

   37 optional_static: TK_PR_STATIC .

    $default  reduce using rule 37 (optional_static)


State 2

    6 def_type: TK_PR_CLASS . TK_IDENTIFICADOR '[' type_fields ']' ';'

    TK_IDENTIFICADOR  shift, and go to state 6


State 3

    0 $accept: programa . $end

    $end  shift, and go to state 7


State 4

    2 programa: def_type . programa

    TK_PR_STATIC  shift, and go to state 1
    TK_PR_CLASS   shift, and go to state 2

    $end      reduce using rule 1 (programa)
    $default  reduce using rule 36 (optional_static)

    programa         go to state 8
    def_type         go to state 4
    optional_static  go to state 5


State 5

    3 programa: optional_static . def_global_var_or_def_function programa

    TK_PR_INT         shift, and go to state 9
    TK_PR_FLOAT       shift, and go to state 10
    TK_PR_BOOL        shift, and go to state 11
    TK_PR_CHAR        shift, and go to state 12
    TK_PR_STRING      shift, and go to state 13
    TK_IDENTIFICADOR  shift, and go to state 14

    def_global_var_or_def_function  go to state 15
    def_global_var                  go to state 16
    def_function                    go to state 17
    header                          go to state 18
    any_type                        go to state 19
    primitive_type                  go to state 20


State 6

    6 def_type: TK_PR_CLASS TK_IDENTIFICADOR . '[' type_fields ']' ';'

    '['  shift, and go to state 21


State 7

    0 $accept: programa $end .

    $default  accept


State 8

    2 programa: def_type programa .

    $default  reduce using rule 2 (programa)


State 9

  112 primitive_type: TK_PR_INT .

    $default  reduce using rule 112 (primitive_type)


State 10

  113 primitive_type: TK_PR_FLOAT .

    $default  reduce using rule 113 (primitive_type)


State 11

  114 primitive_type: TK_PR_BOOL .

    $default  reduce using rule 114 (primitive_type)


State 12

  115 primitive_type: TK_PR_CHAR .

    $default  reduce using rule 115 (primitive_type)


State 13

  116 primitive_type: TK_PR_STRING .

    $default  reduce using rule 116 (primitive_type)


State 14

  111 any_type: TK_IDENTIFICADOR .

    $default  reduce using rule 111 (any_type)


State 15

    3 programa: optional_static def_global_var_or_def_function . programa

    TK_PR_STATIC  shift, and go to state 1
    TK_PR_CLASS   shift, and go to state 2

    $end      reduce using rule 1 (programa)
    $default  reduce using rule 36 (optional_static)

    programa         go to state 22
    def_type         go to state 4
    optional_static  go to state 5


State 16

    4 def_global_var_or_def_function: def_global_var .

    $default  reduce using rule 4 (def_global_var_or_def_function)


State 17

    5 def_global_var_or_def_function: def_function .

    $default  reduce using rule 5 (def_global_var_or_def_function)


State 18

   17 def_function: header . body

    '{'  shift, and go to state 23

    body  go to state 24


State 19

   14 def_global_var: any_type . TK_IDENTIFICADOR optional_vector_modifier ';'
   18 header: any_type . TK_IDENTIFICADOR '(' parameters ')'

    TK_IDENTIFICADOR  shift, and go to state 25


State 20

  110 any_type: primitive_type .

    $default  reduce using rule 110 (any_type)


State 21

    6 def_type: TK_PR_CLASS TK_IDENTIFICADOR '[' . type_fields ']' ';'

    TK_PR_PRIVATE    shift, and go to state 26
    TK_PR_PUBLIC     shift, and go to state 27
    TK_PR_PROTECTED  shift, and go to state 28

    type_fields    go to state 29
    type_field     go to state 30
    encapsulation  go to state 31


State 22

    3 programa: optional_static def_global_var_or_def_function programa .

    $default  reduce using rule 3 (programa)


State 23

   19 body: '{' . command_sequence '}'

    TK_PR_IF          shift, and go to state 32
    TK_PR_WHILE       shift, and go to state 33
    TK_PR_DO          shift, and go to state 34
    TK_PR_INPUT       shift, and go to state 35
    TK_PR_OUTPUT      shift, and go to state 36
    TK_PR_RETURN      shift, and go to state 37
    TK_PR_STATIC      shift, and go to state 1
    TK_PR_FOREACH     shift, and go to state 38
    TK_PR_FOR         shift, and go to state 39
    TK_PR_SWITCH      shift, and go to state 40
    TK_PR_CASE        shift, and go to state 41
    TK_PR_BREAK       shift, and go to state 42
    TK_PR_CONTINUE    shift, and go to state 43
    TK_IDENTIFICADOR  shift, and go to state 44
    '{'               shift, and go to state 23

    TK_IDENTIFICADOR  [reduce using rule 36 (optional_static)]
    '}'               reduce using rule 20 (command_sequence)
    $default          reduce using rule 36 (optional_static)

    body               go to state 45
    command_sequence   go to state 46
    command_in_block   go to state 47
    simple_command     go to state 48
    def_local_var      go to state 49
    optional_static    go to state 50
    input_command      go to state 51
    output_command     go to state 52
    flux_command       go to state 53
    condition_command  go to state 54
    iteration_command  go to state 55
    selection_command  go to state 56
    action_command     go to state 57


State 24

   17 def_function: header body .

    $default  reduce using rule 17 (def_function)


State 25

   14 def_global_var: any_type TK_IDENTIFICADOR . optional_vector_modifier ';'
   18 header: any_type TK_IDENTIFICADOR . '(' parameters ')'

    '['  shift, and go to state 58
    '('  shift, and go to state 59

    $default  reduce using rule 16 (optional_vector_modifier)

    optional_vector_modifier  go to state 60


State 26

   12 encapsulation: TK_PR_PRIVATE .

    $default  reduce using rule 12 (encapsulation)


State 27

   13 encapsulation: TK_PR_PUBLIC .

    $default  reduce using rule 13 (encapsulation)


State 28

   11 encapsulation: TK_PR_PROTECTED .

    $default  reduce using rule 11 (encapsulation)


State 29

    6 def_type: TK_PR_CLASS TK_IDENTIFICADOR '[' type_fields . ']' ';'

    ']'  shift, and go to state 61


State 30

    7 type_fields: type_field . more_fields

    ':'  shift, and go to state 62

    $default  reduce using rule 8 (more_fields)

    more_fields  go to state 63


State 31

   10 type_field: encapsulation . primitive_type TK_IDENTIFICADOR optional_vector_modifier

    TK_PR_INT     shift, and go to state 9
    TK_PR_FLOAT   shift, and go to state 10
    TK_PR_BOOL    shift, and go to state 11
    TK_PR_CHAR    shift, and go to state 12
    TK_PR_STRING  shift, and go to state 13

    primitive_type  go to state 64


State 32

   53 condition_command: TK_PR_IF . '(' expression ')' TK_PR_THEN body optional_else

    '('  shift, and go to state 65


State 33

   58 iteration_command: TK_PR_WHILE . '(' expression ')' TK_PR_DO body

    '('  shift, and go to state 66


State 34

   59 iteration_command: TK_PR_DO . body TK_PR_WHILE '(' expression ')'

    '{'  shift, and go to state 23

    body  go to state 67


State 35

   45 input_command: TK_PR_INPUT . expression

    TK_LIT_INT        shift, and go to state 68
    TK_LIT_FLOAT      shift, and go to state 69
    TK_LIT_FALSE      shift, and go to state 70
    TK_LIT_TRUE       shift, and go to state 71
    TK_LIT_CHAR       shift, and go to state 72
    TK_LIT_STRING     shift, and go to state 73
    TK_IDENTIFICADOR  shift, and go to state 74
    '('               shift, and go to state 75
    '+'               shift, and go to state 76
    '-'               shift, and go to state 77

    expression               go to state 78
    literal                  go to state 79
    unary_arit_log_operator  go to state 80


State 36

   46 output_command: TK_PR_OUTPUT . expression expression_sequence

    TK_LIT_INT        shift, and go to state 68
    TK_LIT_FLOAT      shift, and go to state 69
    TK_LIT_FALSE      shift, and go to state 70
    TK_LIT_TRUE       shift, and go to state 71
    TK_LIT_CHAR       shift, and go to state 72
    TK_LIT_STRING     shift, and go to state 73
    TK_IDENTIFICADOR  shift, and go to state 74
    '('               shift, and go to state 75
    '+'               shift, and go to state 76
    '-'               shift, and go to state 77

    expression               go to state 81
    literal                  go to state 79
    unary_arit_log_operator  go to state 80


State 37

   67 action_command: TK_PR_RETURN . expression ';'

    TK_LIT_INT        shift, and go to state 68
    TK_LIT_FLOAT      shift, and go to state 69
    TK_LIT_FALSE      shift, and go to state 70
    TK_LIT_TRUE       shift, and go to state 71
    TK_LIT_CHAR       shift, and go to state 72
    TK_LIT_STRING     shift, and go to state 73
    TK_IDENTIFICADOR  shift, and go to state 74
    '('               shift, and go to state 75
    '+'               shift, and go to state 76
    '-'               shift, and go to state 77

    expression               go to state 82
    literal                  go to state 79
    unary_arit_log_operator  go to state 80


State 38

   56 iteration_command: TK_PR_FOREACH . '(' TK_IDENTIFICADOR ':' foreach_expression_sequence ')' body

    '('  shift, and go to state 83


State 39

   57 iteration_command: TK_PR_FOR . '(' for_command_sequence ':' expression ':' for_command_sequence ')' body

    '('  shift, and go to state 84


State 40

   60 selection_command: TK_PR_SWITCH . '(' expression ')' body

    '('  shift, and go to state 85


State 41

   70 action_command: TK_PR_CASE . TK_LIT_INT ':'

    TK_LIT_INT  shift, and go to state 86


State 42

   69 action_command: TK_PR_BREAK . ';'

    ';'  shift, and go to state 87


State 43

   68 action_command: TK_PR_CONTINUE . ';'

    ';'  shift, and go to state 88


State 44

   24 simple_command: TK_IDENTIFICADOR . command_proceeding_identifier

    TK_OC_SL  shift, and go to state 89
    TK_OC_SR  shift, and go to state 90
    '['       shift, and go to state 91
    '('       shift, and go to state 92
    '='       shift, and go to state 93
    '$'       shift, and go to state 94

    command_proceeding_identifier  go to state 95
    attribution_command            go to state 96
    func_modifier                  go to state 97
    shift_command                  go to state 98


State 45

   28 simple_command: body .

    $default  reduce using rule 28 (simple_command)


State 46

   19 body: '{' command_sequence . '}'

    '}'  shift, and go to state 99


State 47

   21 command_sequence: command_in_block . command_sequence

    TK_PR_IF          shift, and go to state 32
    TK_PR_WHILE       shift, and go to state 33
    TK_PR_DO          shift, and go to state 34
    TK_PR_INPUT       shift, and go to state 35
    TK_PR_OUTPUT      shift, and go to state 36
    TK_PR_RETURN      shift, and go to state 37
    TK_PR_STATIC      shift, and go to state 1
    TK_PR_FOREACH     shift, and go to state 38
    TK_PR_FOR         shift, and go to state 39
    TK_PR_SWITCH      shift, and go to state 40
    TK_PR_CASE        shift, and go to state 41
    TK_PR_BREAK       shift, and go to state 42
    TK_PR_CONTINUE    shift, and go to state 43
    TK_IDENTIFICADOR  shift, and go to state 44
    '{'               shift, and go to state 23

    TK_IDENTIFICADOR  [reduce using rule 36 (optional_static)]
    '}'               reduce using rule 20 (command_sequence)
    $default          reduce using rule 36 (optional_static)

    body               go to state 45
    command_sequence   go to state 100
    command_in_block   go to state 47
    simple_command     go to state 48
    def_local_var      go to state 49
    optional_static    go to state 50
    input_command      go to state 51
    output_command     go to state 52
    flux_command       go to state 53
    condition_command  go to state 54
    iteration_command  go to state 55
    selection_command  go to state 56
    action_command     go to state 57


State 48

   22 command_in_block: simple_command . ';'

    ';'  shift, and go to state 101


State 49

   25 simple_command: def_local_var .

    $default  reduce using rule 25 (simple_command)


State 50

   33 def_local_var: optional_static . optional_const def_local_var_tail

    TK_PR_CONST  shift, and go to state 102

    $default  reduce using rule 38 (optional_const)

    optional_const  go to state 103


State 51

   26 simple_command: input_command .

    $default  reduce using rule 26 (simple_command)


State 52

   27 simple_command: output_command .

    $default  reduce using rule 27 (simple_command)


State 53

   29 simple_command: flux_command .

    $default  reduce using rule 29 (simple_command)


State 54

   50 flux_command: condition_command .

    $default  reduce using rule 50 (flux_command)


State 55

   51 flux_command: iteration_command .

    $default  reduce using rule 51 (flux_command)


State 56

   52 flux_command: selection_command .

    $default  reduce using rule 52 (flux_command)


State 57

   23 command_in_block: action_command .

    $default  reduce using rule 23 (command_in_block)


State 58

   15 optional_vector_modifier: '[' . TK_LIT_INT ']'

    TK_LIT_INT  shift, and go to state 104


State 59

   18 header: any_type TK_IDENTIFICADOR '(' . parameters ')'

    TK_PR_CONST  shift, and go to state 102

    ')'       reduce using rule 105 (parameters)
    $default  reduce using rule 38 (optional_const)

    optional_const  go to state 105
    parameters      go to state 106
    parameter       go to state 107


State 60

   14 def_global_var: any_type TK_IDENTIFICADOR optional_vector_modifier . ';'

    ';'  shift, and go to state 108


State 61

    6 def_type: TK_PR_CLASS TK_IDENTIFICADOR '[' type_fields ']' . ';'

    ';'  shift, and go to state 109


State 62

    9 more_fields: ':' . type_field more_fields

    TK_PR_PRIVATE    shift, and go to state 26
    TK_PR_PUBLIC     shift, and go to state 27
    TK_PR_PROTECTED  shift, and go to state 28

    type_field     go to state 110
    encapsulation  go to state 31


State 63

    7 type_fields: type_field more_fields .

    $default  reduce using rule 7 (type_fields)


State 64

   10 type_field: encapsulation primitive_type . TK_IDENTIFICADOR optional_vector_modifier

    TK_IDENTIFICADOR  shift, and go to state 111


State 65

   53 condition_command: TK_PR_IF '(' . expression ')' TK_PR_THEN body optional_else

    TK_LIT_INT        shift, and go to state 68
    TK_LIT_FLOAT      shift, and go to state 69
    TK_LIT_FALSE      shift, and go to state 70
    TK_LIT_TRUE       shift, and go to state 71
    TK_LIT_CHAR       shift, and go to state 72
    TK_LIT_STRING     shift, and go to state 73
    TK_IDENTIFICADOR  shift, and go to state 74
    '('               shift, and go to state 75
    '+'               shift, and go to state 76
    '-'               shift, and go to state 77

    expression               go to state 112
    literal                  go to state 79
    unary_arit_log_operator  go to state 80


State 66

   58 iteration_command: TK_PR_WHILE '(' . expression ')' TK_PR_DO body

    TK_LIT_INT        shift, and go to state 68
    TK_LIT_FLOAT      shift, and go to state 69
    TK_LIT_FALSE      shift, and go to state 70
    TK_LIT_TRUE       shift, and go to state 71
    TK_LIT_CHAR       shift, and go to state 72
    TK_LIT_STRING     shift, and go to state 73
    TK_IDENTIFICADOR  shift, and go to state 74
    '('               shift, and go to state 75
    '+'               shift, and go to state 76
    '-'               shift, and go to state 77

    expression               go to state 113
    literal                  go to state 79
    unary_arit_log_operator  go to state 80


State 67

   59 iteration_command: TK_PR_DO body . TK_PR_WHILE '(' expression ')'

    TK_PR_WHILE  shift, and go to state 114


State 68

   79 literal: TK_LIT_INT .

    $default  reduce using rule 79 (literal)


State 69

   80 literal: TK_LIT_FLOAT .

    $default  reduce using rule 80 (literal)


State 70

   83 literal: TK_LIT_FALSE .

    $default  reduce using rule 83 (literal)


State 71

   82 literal: TK_LIT_TRUE .

    $default  reduce using rule 82 (literal)


State 72

   81 literal: TK_LIT_CHAR .

    $default  reduce using rule 81 (literal)


State 73

   84 literal: TK_LIT_STRING .

    $default  reduce using rule 84 (literal)


State 74

   76 expression: TK_IDENTIFICADOR . func_or_array_modifier

    '['  shift, and go to state 115
    '('  shift, and go to state 92

    TK_OC_LE          reduce using rule 88 (optional_func_modifier)
    TK_OC_LE          [reduce using rule 90 (optional_array_modifier)]
    TK_OC_GE          reduce using rule 88 (optional_func_modifier)
    TK_OC_GE          [reduce using rule 90 (optional_array_modifier)]
    TK_OC_EQ          reduce using rule 88 (optional_func_modifier)
    TK_OC_EQ          [reduce using rule 90 (optional_array_modifier)]
    TK_OC_NE          reduce using rule 88 (optional_func_modifier)
    TK_OC_NE          [reduce using rule 90 (optional_array_modifier)]
    TK_OC_AND         reduce using rule 88 (optional_func_modifier)
    TK_OC_AND         [reduce using rule 90 (optional_array_modifier)]
    TK_OC_OR          reduce using rule 88 (optional_func_modifier)
    TK_OC_OR          [reduce using rule 90 (optional_array_modifier)]
    TK_LIT_INT        reduce using rule 88 (optional_func_modifier)
    TK_LIT_INT        [reduce using rule 90 (optional_array_modifier)]
    TK_LIT_FLOAT      reduce using rule 88 (optional_func_modifier)
    TK_LIT_FLOAT      [reduce using rule 90 (optional_array_modifier)]
    TK_LIT_FALSE      reduce using rule 88 (optional_func_modifier)
    TK_LIT_FALSE      [reduce using rule 90 (optional_array_modifier)]
    TK_LIT_TRUE       reduce using rule 88 (optional_func_modifier)
    TK_LIT_TRUE       [reduce using rule 90 (optional_array_modifier)]
    TK_LIT_CHAR       reduce using rule 88 (optional_func_modifier)
    TK_LIT_CHAR       [reduce using rule 90 (optional_array_modifier)]
    TK_LIT_STRING     reduce using rule 88 (optional_func_modifier)
    TK_LIT_STRING     [reduce using rule 90 (optional_array_modifier)]
    TK_IDENTIFICADOR  reduce using rule 88 (optional_func_modifier)
    TK_IDENTIFICADOR  [reduce using rule 90 (optional_array_modifier)]
    ']'               reduce using rule 88 (optional_func_modifier)
    ']'               [reduce using rule 90 (optional_array_modifier)]
    ';'               reduce using rule 88 (optional_func_modifier)
    ';'               [reduce using rule 90 (optional_array_modifier)]
    ':'               reduce using rule 88 (optional_func_modifier)
    ':'               [reduce using rule 90 (optional_array_modifier)]
    '('               [reduce using rule 88 (optional_func_modifier)]
    '('               [reduce using rule 90 (optional_array_modifier)]
    ')'               reduce using rule 88 (optional_func_modifier)
    ')'               [reduce using rule 90 (optional_array_modifier)]
    ','               reduce using rule 88 (optional_func_modifier)
    ','               [reduce using rule 90 (optional_array_modifier)]
    '+'               reduce using rule 88 (optional_func_modifier)
    '+'               [reduce using rule 90 (optional_array_modifier)]
    '-'               reduce using rule 88 (optional_func_modifier)
    '-'               [reduce using rule 90 (optional_array_modifier)]
    '/'               reduce using rule 88 (optional_func_modifier)
    '/'               [reduce using rule 90 (optional_array_modifier)]
    '*'               reduce using rule 88 (optional_func_modifier)
    '*'               [reduce using rule 90 (optional_array_modifier)]
    $default          reduce using rule 88 (optional_func_modifier)

    func_modifier            go to state 116
    func_or_array_modifier   go to state 117
    optional_func_modifier   go to state 118
    optional_array_modifier  go to state 119


State 75

   75 expression: '(' . expression ')'

    TK_LIT_INT        shift, and go to state 68
    TK_LIT_FLOAT      shift, and go to state 69
    TK_LIT_FALSE      shift, and go to state 70
    TK_LIT_TRUE       shift, and go to state 71
    TK_LIT_CHAR       shift, and go to state 72
    TK_LIT_STRING     shift, and go to state 73
    TK_IDENTIFICADOR  shift, and go to state 74
    '('               shift, and go to state 75
    '+'               shift, and go to state 76
    '-'               shift, and go to state 77

    expression               go to state 120
    literal                  go to state 79
    unary_arit_log_operator  go to state 80


State 76

  104 unary_arit_log_operator: '+' .

    $default  reduce using rule 104 (unary_arit_log_operator)


State 77

  103 unary_arit_log_operator: '-' .

    $default  reduce using rule 103 (unary_arit_log_operator)


State 78

   45 input_command: TK_PR_INPUT expression .
   77 expression: expression . arit_log_operator expression

    TK_OC_LE   shift, and go to state 121
    TK_OC_GE   shift, and go to state 122
    TK_OC_EQ   shift, and go to state 123
    TK_OC_NE   shift, and go to state 124
    TK_OC_AND  shift, and go to state 125
    TK_OC_OR   shift, and go to state 126
    '+'        shift, and go to state 127
    '-'        shift, and go to state 128
    '/'        shift, and go to state 129
    '*'        shift, and go to state 130

    $default  reduce using rule 45 (input_command)

    arit_log_operator  go to state 131
    log_operator       go to state 132
    arit_operator      go to state 133


State 79

   74 expression: literal .

    $default  reduce using rule 74 (expression)


State 80

   78 expression: unary_arit_log_operator . expression

    TK_LIT_INT        shift, and go to state 68
    TK_LIT_FLOAT      shift, and go to state 69
    TK_LIT_FALSE      shift, and go to state 70
    TK_LIT_TRUE       shift, and go to state 71
    TK_LIT_CHAR       shift, and go to state 72
    TK_LIT_STRING     shift, and go to state 73
    TK_IDENTIFICADOR  shift, and go to state 74
    '('               shift, and go to state 75
    '+'               shift, and go to state 76
    '-'               shift, and go to state 77

    expression               go to state 134
    literal                  go to state 79
    unary_arit_log_operator  go to state 80


State 81

   46 output_command: TK_PR_OUTPUT expression . expression_sequence
   77 expression: expression . arit_log_operator expression

    TK_OC_LE          shift, and go to state 121
    TK_OC_GE          shift, and go to state 122
    TK_OC_EQ          shift, and go to state 123
    TK_OC_NE          shift, and go to state 124
    TK_OC_AND         shift, and go to state 125
    TK_OC_OR          shift, and go to state 126
    TK_LIT_INT        shift, and go to state 68
    TK_LIT_FLOAT      shift, and go to state 69
    TK_LIT_FALSE      shift, and go to state 70
    TK_LIT_TRUE       shift, and go to state 71
    TK_LIT_CHAR       shift, and go to state 72
    TK_LIT_STRING     shift, and go to state 73
    TK_IDENTIFICADOR  shift, and go to state 74
    '('               shift, and go to state 75
    ','               shift, and go to state 135
    '+'               shift, and go to state 136
    '-'               shift, and go to state 137
    '/'               shift, and go to state 129
    '*'               shift, and go to state 130

    ','       [reduce using rule 71 (expression_sequence)]
    $default  reduce using rule 71 (expression_sequence)

    expression_sequence      go to state 138
    expression               go to state 139
    literal                  go to state 79
    arit_log_operator        go to state 131
    log_operator             go to state 132
    arit_operator            go to state 133
    unary_arit_log_operator  go to state 80


State 82

   67 action_command: TK_PR_RETURN expression . ';'
   77 expression: expression . arit_log_operator expression

    TK_OC_LE   shift, and go to state 121
    TK_OC_GE   shift, and go to state 122
    TK_OC_EQ   shift, and go to state 123
    TK_OC_NE   shift, and go to state 124
    TK_OC_AND  shift, and go to state 125
    TK_OC_OR   shift, and go to state 126
    ';'        shift, and go to state 140
    '+'        shift, and go to state 127
    '-'        shift, and go to state 128
    '/'        shift, and go to state 129
    '*'        shift, and go to state 130

    arit_log_operator  go to state 131
    log_operator       go to state 132
    arit_operator      go to state 133


State 83

   56 iteration_command: TK_PR_FOREACH '(' . TK_IDENTIFICADOR ':' foreach_expression_sequence ')' body

    TK_IDENTIFICADOR  shift, and go to state 141


State 84

   57 iteration_command: TK_PR_FOR '(' . for_command_sequence ':' expression ':' for_command_sequence ')' body

    TK_PR_IF          shift, and go to state 32
    TK_PR_WHILE       shift, and go to state 33
    TK_PR_DO          shift, and go to state 34
    TK_PR_INPUT       shift, and go to state 35
    TK_PR_OUTPUT      shift, and go to state 36
    TK_PR_STATIC      shift, and go to state 1
    TK_PR_FOREACH     shift, and go to state 38
    TK_PR_FOR         shift, and go to state 39
    TK_PR_SWITCH      shift, and go to state 40
    TK_IDENTIFICADOR  shift, and go to state 44
    '{'               shift, and go to state 23

    TK_IDENTIFICADOR  [reduce using rule 36 (optional_static)]
    $default          reduce using rule 36 (optional_static)

    body                  go to state 45
    simple_command        go to state 142
    def_local_var         go to state 49
    optional_static       go to state 50
    input_command         go to state 51
    output_command        go to state 52
    flux_command          go to state 53
    condition_command     go to state 54
    iteration_command     go to state 55
    selection_command     go to state 56
    for_command_sequence  go to state 143


State 85

   60 selection_command: TK_PR_SWITCH '(' . expression ')' body

    TK_LIT_INT        shift, and go to state 68
    TK_LIT_FLOAT      shift, and go to state 69
    TK_LIT_FALSE      shift, and go to state 70
    TK_LIT_TRUE       shift, and go to state 71
    TK_LIT_CHAR       shift, and go to state 72
    TK_LIT_STRING     shift, and go to state 73
    TK_IDENTIFICADOR  shift, and go to state 74
    '('               shift, and go to state 75
    '+'               shift, and go to state 76
    '-'               shift, and go to state 77

    expression               go to state 144
    literal                  go to state 79
    unary_arit_log_operator  go to state 80


State 86

   70 action_command: TK_PR_CASE TK_LIT_INT . ':'

    ':'  shift, and go to state 145


State 87

   69 action_command: TK_PR_BREAK ';' .

    $default  reduce using rule 69 (action_command)


State 88

   68 action_command: TK_PR_CONTINUE ';' .

    $default  reduce using rule 68 (action_command)


State 89

   48 shift_command: TK_OC_SL . TK_LIT_INT

    TK_LIT_INT  shift, and go to state 146


State 90

   49 shift_command: TK_OC_SR . TK_LIT_INT

    TK_LIT_INT  shift, and go to state 147


State 91

   43 attribution_command: '[' . expression ']' '=' expression

    TK_LIT_INT        shift, and go to state 68
    TK_LIT_FLOAT      shift, and go to state 69
    TK_LIT_FALSE      shift, and go to state 70
    TK_LIT_TRUE       shift, and go to state 71
    TK_LIT_CHAR       shift, and go to state 72
    TK_LIT_STRING     shift, and go to state 73
    TK_IDENTIFICADOR  shift, and go to state 74
    '('               shift, and go to state 75
    '+'               shift, and go to state 76
    '-'               shift, and go to state 77

    expression               go to state 148
    literal                  go to state 79
    unary_arit_log_operator  go to state 80


State 92

   47 func_modifier: '(' . expression_sequence ')'

    TK_LIT_INT        shift, and go to state 68
    TK_LIT_FLOAT      shift, and go to state 69
    TK_LIT_FALSE      shift, and go to state 70
    TK_LIT_TRUE       shift, and go to state 71
    TK_LIT_CHAR       shift, and go to state 72
    TK_LIT_STRING     shift, and go to state 73
    TK_IDENTIFICADOR  shift, and go to state 74
    '('               shift, and go to state 75
    ','               shift, and go to state 135
    '+'               shift, and go to state 76
    '-'               shift, and go to state 77

    $default  reduce using rule 71 (expression_sequence)

    expression_sequence      go to state 149
    expression               go to state 139
    literal                  go to state 79
    unary_arit_log_operator  go to state 80


State 93

   42 attribution_command: '=' . expression

    TK_LIT_INT        shift, and go to state 68
    TK_LIT_FLOAT      shift, and go to state 69
    TK_LIT_FALSE      shift, and go to state 70
    TK_LIT_TRUE       shift, and go to state 71
    TK_LIT_CHAR       shift, and go to state 72
    TK_LIT_STRING     shift, and go to state 73
    TK_IDENTIFICADOR  shift, and go to state 74
    '('               shift, and go to state 75
    '+'               shift, and go to state 76
    '-'               shift, and go to state 77

    expression               go to state 150
    literal                  go to state 79
    unary_arit_log_operator  go to state 80


State 94

   44 attribution_command: '$' . TK_IDENTIFICADOR '=' expression

    TK_IDENTIFICADOR  shift, and go to state 151


State 95

   24 simple_command: TK_IDENTIFICADOR command_proceeding_identifier .

    $default  reduce using rule 24 (simple_command)


State 96

   30 command_proceeding_identifier: attribution_command .

    $default  reduce using rule 30 (command_proceeding_identifier)


State 97

   31 command_proceeding_identifier: func_modifier .

    $default  reduce using rule 31 (command_proceeding_identifier)


State 98

   32 command_proceeding_identifier: shift_command .

    $default  reduce using rule 32 (command_proceeding_identifier)


State 99

   19 body: '{' command_sequence '}' .

    $default  reduce using rule 19 (body)


State 100

   21 command_sequence: command_in_block command_sequence .

    $default  reduce using rule 21 (command_sequence)


State 101

   22 command_in_block: simple_command ';' .

    $default  reduce using rule 22 (command_in_block)


State 102

   39 optional_const: TK_PR_CONST .

    $default  reduce using rule 39 (optional_const)


State 103

   33 def_local_var: optional_static optional_const . def_local_var_tail

    TK_PR_INT         shift, and go to state 9
    TK_PR_FLOAT       shift, and go to state 10
    TK_PR_BOOL        shift, and go to state 11
    TK_PR_CHAR        shift, and go to state 12
    TK_PR_STRING      shift, and go to state 13
    TK_IDENTIFICADOR  shift, and go to state 152

    def_local_var_tail  go to state 153
    primitive_type      go to state 154


State 104

   15 optional_vector_modifier: '[' TK_LIT_INT . ']'

    ']'  shift, and go to state 155


State 105

  107 parameter: optional_const . any_type TK_IDENTIFICADOR

    TK_PR_INT         shift, and go to state 9
    TK_PR_FLOAT       shift, and go to state 10
    TK_PR_BOOL        shift, and go to state 11
    TK_PR_CHAR        shift, and go to state 12
    TK_PR_STRING      shift, and go to state 13
    TK_IDENTIFICADOR  shift, and go to state 14

    any_type        go to state 156
    primitive_type  go to state 20


State 106

   18 header: any_type TK_IDENTIFICADOR '(' parameters . ')'

    ')'  shift, and go to state 157


State 107

  106 parameters: parameter . optional_more_parameters

    ','  shift, and go to state 158

    $default  reduce using rule 109 (optional_more_parameters)

    optional_more_parameters  go to state 159


State 108

   14 def_global_var: any_type TK_IDENTIFICADOR optional_vector_modifier ';' .

    $default  reduce using rule 14 (def_global_var)


State 109

    6 def_type: TK_PR_CLASS TK_IDENTIFICADOR '[' type_fields ']' ';' .

    $default  reduce using rule 6 (def_type)


State 110

    9 more_fields: ':' type_field . more_fields

    ':'  shift, and go to state 62

    $default  reduce using rule 8 (more_fields)

    more_fields  go to state 160


State 111

   10 type_field: encapsulation primitive_type TK_IDENTIFICADOR . optional_vector_modifier

    '['  shift, and go to state 58

    $default  reduce using rule 16 (optional_vector_modifier)

    optional_vector_modifier  go to state 161


State 112

   53 condition_command: TK_PR_IF '(' expression . ')' TK_PR_THEN body optional_else
   77 expression: expression . arit_log_operator expression

    TK_OC_LE   shift, and go to state 121
    TK_OC_GE   shift, and go to state 122
    TK_OC_EQ   shift, and go to state 123
    TK_OC_NE   shift, and go to state 124
    TK_OC_AND  shift, and go to state 125
    TK_OC_OR   shift, and go to state 126
    ')'        shift, and go to state 162
    '+'        shift, and go to state 127
    '-'        shift, and go to state 128
    '/'        shift, and go to state 129
    '*'        shift, and go to state 130

    arit_log_operator  go to state 131
    log_operator       go to state 132
    arit_operator      go to state 133


State 113

   58 iteration_command: TK_PR_WHILE '(' expression . ')' TK_PR_DO body
   77 expression: expression . arit_log_operator expression

    TK_OC_LE   shift, and go to state 121
    TK_OC_GE   shift, and go to state 122
    TK_OC_EQ   shift, and go to state 123
    TK_OC_NE   shift, and go to state 124
    TK_OC_AND  shift, and go to state 125
    TK_OC_OR   shift, and go to state 126
    ')'        shift, and go to state 163
    '+'        shift, and go to state 127
    '-'        shift, and go to state 128
    '/'        shift, and go to state 129
    '*'        shift, and go to state 130

    arit_log_operator  go to state 131
    log_operator       go to state 132
    arit_operator      go to state 133


State 114

   59 iteration_command: TK_PR_DO body TK_PR_WHILE . '(' expression ')'

    '('  shift, and go to state 164


State 115

   89 optional_array_modifier: '[' . expression ']'

    TK_LIT_INT        shift, and go to state 68
    TK_LIT_FLOAT      shift, and go to state 69
    TK_LIT_FALSE      shift, and go to state 70
    TK_LIT_TRUE       shift, and go to state 71
    TK_LIT_CHAR       shift, and go to state 72
    TK_LIT_STRING     shift, and go to state 73
    TK_IDENTIFICADOR  shift, and go to state 74
    '('               shift, and go to state 75
    '+'               shift, and go to state 76
    '-'               shift, and go to state 77

    expression               go to state 165
    literal                  go to state 79
    unary_arit_log_operator  go to state 80


State 116

   87 optional_func_modifier: func_modifier .

    $default  reduce using rule 87 (optional_func_modifier)


State 117

   76 expression: TK_IDENTIFICADOR func_or_array_modifier .

    $default  reduce using rule 76 (expression)


State 118

   86 func_or_array_modifier: optional_func_modifier .

    $default  reduce using rule 86 (func_or_array_modifier)


State 119

   85 func_or_array_modifier: optional_array_modifier .

    $default  reduce using rule 85 (func_or_array_modifier)


State 120

   75 expression: '(' expression . ')'
   77           | expression . arit_log_operator expression

    TK_OC_LE   shift, and go to state 121
    TK_OC_GE   shift, and go to state 122
    TK_OC_EQ   shift, and go to state 123
    TK_OC_NE   shift, and go to state 124
    TK_OC_AND  shift, and go to state 125
    TK_OC_OR   shift, and go to state 126
    ')'        shift, and go to state 166
    '+'        shift, and go to state 127
    '-'        shift, and go to state 128
    '/'        shift, and go to state 129
    '*'        shift, and go to state 130

    arit_log_operator  go to state 131
    log_operator       go to state 132
    arit_operator      go to state 133


State 121

   93 log_operator: TK_OC_LE .

    $default  reduce using rule 93 (log_operator)


State 122

   94 log_operator: TK_OC_GE .

    $default  reduce using rule 94 (log_operator)


State 123

   95 log_operator: TK_OC_EQ .

    $default  reduce using rule 95 (log_operator)


State 124

   96 log_operator: TK_OC_NE .

    $default  reduce using rule 96 (log_operator)


State 125

   97 log_operator: TK_OC_AND .

    $default  reduce using rule 97 (log_operator)


State 126

   98 log_operator: TK_OC_OR .

    $default  reduce using rule 98 (log_operator)


State 127

   99 arit_operator: '+' .

    $default  reduce using rule 99 (arit_operator)


State 128

  100 arit_operator: '-' .

    $default  reduce using rule 100 (arit_operator)


State 129

  101 arit_operator: '/' .

    $default  reduce using rule 101 (arit_operator)


State 130

  102 arit_operator: '*' .

    $default  reduce using rule 102 (arit_operator)


State 131

   77 expression: expression arit_log_operator . expression

    TK_LIT_INT        shift, and go to state 68
    TK_LIT_FLOAT      shift, and go to state 69
    TK_LIT_FALSE      shift, and go to state 70
    TK_LIT_TRUE       shift, and go to state 71
    TK_LIT_CHAR       shift, and go to state 72
    TK_LIT_STRING     shift, and go to state 73
    TK_IDENTIFICADOR  shift, and go to state 74
    '('               shift, and go to state 75
    '+'               shift, and go to state 76
    '-'               shift, and go to state 77

    expression               go to state 167
    literal                  go to state 79
    unary_arit_log_operator  go to state 80


State 132

   91 arit_log_operator: log_operator .

    $default  reduce using rule 91 (arit_log_operator)


State 133

   92 arit_log_operator: arit_operator .

    $default  reduce using rule 92 (arit_log_operator)


State 134

   77 expression: expression . arit_log_operator expression
   78           | unary_arit_log_operator expression .

    TK_OC_LE   shift, and go to state 121
    TK_OC_GE   shift, and go to state 122
    TK_OC_EQ   shift, and go to state 123
    TK_OC_NE   shift, and go to state 124
    TK_OC_AND  shift, and go to state 125
    TK_OC_OR   shift, and go to state 126
    '+'        shift, and go to state 127
    '-'        shift, and go to state 128
    '/'        shift, and go to state 129
    '*'        shift, and go to state 130

    TK_OC_LE   [reduce using rule 78 (expression)]
    TK_OC_GE   [reduce using rule 78 (expression)]
    TK_OC_EQ   [reduce using rule 78 (expression)]
    TK_OC_NE   [reduce using rule 78 (expression)]
    TK_OC_AND  [reduce using rule 78 (expression)]
    TK_OC_OR   [reduce using rule 78 (expression)]
    '+'        [reduce using rule 78 (expression)]
    '-'        [reduce using rule 78 (expression)]
    '/'        [reduce using rule 78 (expression)]
    '*'        [reduce using rule 78 (expression)]
    $default   reduce using rule 78 (expression)

    arit_log_operator  go to state 131
    log_operator       go to state 132
    arit_operator      go to state 133


State 135

   72 expression_sequence: ',' . expression_sequence

    TK_LIT_INT        shift, and go to state 68
    TK_LIT_FLOAT      shift, and go to state 69
    TK_LIT_FALSE      shift, and go to state 70
    TK_LIT_TRUE       shift, and go to state 71
    TK_LIT_CHAR       shift, and go to state 72
    TK_LIT_STRING     shift, and go to state 73
    TK_IDENTIFICADOR  shift, and go to state 74
    '('               shift, and go to state 75
    ','               shift, and go to state 135
    '+'               shift, and go to state 76
    '-'               shift, and go to state 77

    ','       [reduce using rule 71 (expression_sequence)]
    $default  reduce using rule 71 (expression_sequence)

    expression_sequence      go to state 168
    expression               go to state 139
    literal                  go to state 79
    unary_arit_log_operator  go to state 80


State 136

   99 arit_operator: '+' .
  104 unary_arit_log_operator: '+' .

    TK_LIT_INT        reduce using rule 99 (arit_operator)
    TK_LIT_INT        [reduce using rule 104 (unary_arit_log_operator)]
    TK_LIT_FLOAT      reduce using rule 99 (arit_operator)
    TK_LIT_FLOAT      [reduce using rule 104 (unary_arit_log_operator)]
    TK_LIT_FALSE      reduce using rule 99 (arit_operator)
    TK_LIT_FALSE      [reduce using rule 104 (unary_arit_log_operator)]
    TK_LIT_TRUE       reduce using rule 99 (arit_operator)
    TK_LIT_TRUE       [reduce using rule 104 (unary_arit_log_operator)]
    TK_LIT_CHAR       reduce using rule 99 (arit_operator)
    TK_LIT_CHAR       [reduce using rule 104 (unary_arit_log_operator)]
    TK_LIT_STRING     reduce using rule 99 (arit_operator)
    TK_LIT_STRING     [reduce using rule 104 (unary_arit_log_operator)]
    TK_IDENTIFICADOR  reduce using rule 99 (arit_operator)
    TK_IDENTIFICADOR  [reduce using rule 104 (unary_arit_log_operator)]
    '('               reduce using rule 99 (arit_operator)
    '('               [reduce using rule 104 (unary_arit_log_operator)]
    '+'               reduce using rule 99 (arit_operator)
    '+'               [reduce using rule 104 (unary_arit_log_operator)]
    '-'               reduce using rule 99 (arit_operator)
    '-'               [reduce using rule 104 (unary_arit_log_operator)]
    $default          reduce using rule 99 (arit_operator)


State 137

  100 arit_operator: '-' .
  103 unary_arit_log_operator: '-' .

    TK_LIT_INT        reduce using rule 100 (arit_operator)
    TK_LIT_INT        [reduce using rule 103 (unary_arit_log_operator)]
    TK_LIT_FLOAT      reduce using rule 100 (arit_operator)
    TK_LIT_FLOAT      [reduce using rule 103 (unary_arit_log_operator)]
    TK_LIT_FALSE      reduce using rule 100 (arit_operator)
    TK_LIT_FALSE      [reduce using rule 103 (unary_arit_log_operator)]
    TK_LIT_TRUE       reduce using rule 100 (arit_operator)
    TK_LIT_TRUE       [reduce using rule 103 (unary_arit_log_operator)]
    TK_LIT_CHAR       reduce using rule 100 (arit_operator)
    TK_LIT_CHAR       [reduce using rule 103 (unary_arit_log_operator)]
    TK_LIT_STRING     reduce using rule 100 (arit_operator)
    TK_LIT_STRING     [reduce using rule 103 (unary_arit_log_operator)]
    TK_IDENTIFICADOR  reduce using rule 100 (arit_operator)
    TK_IDENTIFICADOR  [reduce using rule 103 (unary_arit_log_operator)]
    '('               reduce using rule 100 (arit_operator)
    '('               [reduce using rule 103 (unary_arit_log_operator)]
    '+'               reduce using rule 100 (arit_operator)
    '+'               [reduce using rule 103 (unary_arit_log_operator)]
    '-'               reduce using rule 100 (arit_operator)
    '-'               [reduce using rule 103 (unary_arit_log_operator)]
    $default          reduce using rule 100 (arit_operator)


State 138

   46 output_command: TK_PR_OUTPUT expression expression_sequence .

    $default  reduce using rule 46 (output_command)


State 139

   73 expression_sequence: expression . expression_sequence
   77 expression: expression . arit_log_operator expression

    TK_OC_LE          shift, and go to state 121
    TK_OC_GE          shift, and go to state 122
    TK_OC_EQ          shift, and go to state 123
    TK_OC_NE          shift, and go to state 124
    TK_OC_AND         shift, and go to state 125
    TK_OC_OR          shift, and go to state 126
    TK_LIT_INT        shift, and go to state 68
    TK_LIT_FLOAT      shift, and go to state 69
    TK_LIT_FALSE      shift, and go to state 70
    TK_LIT_TRUE       shift, and go to state 71
    TK_LIT_CHAR       shift, and go to state 72
    TK_LIT_STRING     shift, and go to state 73
    TK_IDENTIFICADOR  shift, and go to state 74
    '('               shift, and go to state 75
    ','               shift, and go to state 135
    '+'               shift, and go to state 136
    '-'               shift, and go to state 137
    '/'               shift, and go to state 129
    '*'               shift, and go to state 130

    ','       [reduce using rule 71 (expression_sequence)]
    $default  reduce using rule 71 (expression_sequence)

    expression_sequence      go to state 169
    expression               go to state 139
    literal                  go to state 79
    arit_log_operator        go to state 131
    log_operator             go to state 132
    arit_operator            go to state 133
    unary_arit_log_operator  go to state 80


State 140

   67 action_command: TK_PR_RETURN expression ';' .

    $default  reduce using rule 67 (action_command)


State 141

   56 iteration_command: TK_PR_FOREACH '(' TK_IDENTIFICADOR . ':' foreach_expression_sequence ')' body

    ':'  shift, and go to state 170


State 142

   61 for_command_sequence: simple_command . optional_extra_for_commands

    ','  shift, and go to state 171

    $default  reduce using rule 62 (optional_extra_for_commands)

    optional_extra_for_commands  go to state 172


State 143

   57 iteration_command: TK_PR_FOR '(' for_command_sequence . ':' expression ':' for_command_sequence ')' body

    ':'  shift, and go to state 173


State 144

   60 selection_command: TK_PR_SWITCH '(' expression . ')' body
   77 expression: expression . arit_log_operator expression

    TK_OC_LE   shift, and go to state 121
    TK_OC_GE   shift, and go to state 122
    TK_OC_EQ   shift, and go to state 123
    TK_OC_NE   shift, and go to state 124
    TK_OC_AND  shift, and go to state 125
    TK_OC_OR   shift, and go to state 126
    ')'        shift, and go to state 174
    '+'        shift, and go to state 127
    '-'        shift, and go to state 128
    '/'        shift, and go to state 129
    '*'        shift, and go to state 130

    arit_log_operator  go to state 131
    log_operator       go to state 132
    arit_operator      go to state 133


State 145

   70 action_command: TK_PR_CASE TK_LIT_INT ':' .

    $default  reduce using rule 70 (action_command)


State 146

   48 shift_command: TK_OC_SL TK_LIT_INT .

    $default  reduce using rule 48 (shift_command)


State 147

   49 shift_command: TK_OC_SR TK_LIT_INT .

    $default  reduce using rule 49 (shift_command)


State 148

   43 attribution_command: '[' expression . ']' '=' expression
   77 expression: expression . arit_log_operator expression

    TK_OC_LE   shift, and go to state 121
    TK_OC_GE   shift, and go to state 122
    TK_OC_EQ   shift, and go to state 123
    TK_OC_NE   shift, and go to state 124
    TK_OC_AND  shift, and go to state 125
    TK_OC_OR   shift, and go to state 126
    ']'        shift, and go to state 175
    '+'        shift, and go to state 127
    '-'        shift, and go to state 128
    '/'        shift, and go to state 129
    '*'        shift, and go to state 130

    arit_log_operator  go to state 131
    log_operator       go to state 132
    arit_operator      go to state 133


State 149

   47 func_modifier: '(' expression_sequence . ')'

    ')'  shift, and go to state 176


State 150

   42 attribution_command: '=' expression .
   77 expression: expression . arit_log_operator expression

    TK_OC_LE   shift, and go to state 121
    TK_OC_GE   shift, and go to state 122
    TK_OC_EQ   shift, and go to state 123
    TK_OC_NE   shift, and go to state 124
    TK_OC_AND  shift, and go to state 125
    TK_OC_OR   shift, and go to state 126
    '+'        shift, and go to state 127
    '-'        shift, and go to state 128
    '/'        shift, and go to state 129
    '*'        shift, and go to state 130

    $default  reduce using rule 42 (attribution_command)

    arit_log_operator  go to state 131
    log_operator       go to state 132
    arit_operator      go to state 133


State 151

   44 attribution_command: '$' TK_IDENTIFICADOR . '=' expression

    '='  shift, and go to state 177


State 152

   34 def_local_var_tail: TK_IDENTIFICADOR . TK_IDENTIFICADOR

    TK_IDENTIFICADOR  shift, and go to state 178


State 153

   33 def_local_var: optional_static optional_const def_local_var_tail .

    $default  reduce using rule 33 (def_local_var)


State 154

   35 def_local_var_tail: primitive_type . TK_IDENTIFICADOR optional_init

    TK_IDENTIFICADOR  shift, and go to state 179


State 155

   15 optional_vector_modifier: '[' TK_LIT_INT ']' .

    $default  reduce using rule 15 (optional_vector_modifier)


State 156

  107 parameter: optional_const any_type . TK_IDENTIFICADOR

    TK_IDENTIFICADOR  shift, and go to state 180


State 157

   18 header: any_type TK_IDENTIFICADOR '(' parameters ')' .

    $default  reduce using rule 18 (header)


State 158

  108 optional_more_parameters: ',' . parameter optional_more_parameters

    TK_PR_CONST  shift, and go to state 102

    $default  reduce using rule 38 (optional_const)

    optional_const  go to state 105
    parameter       go to state 181


State 159

  106 parameters: parameter optional_more_parameters .

    $default  reduce using rule 106 (parameters)


State 160

    9 more_fields: ':' type_field more_fields .

    $default  reduce using rule 9 (more_fields)


State 161

   10 type_field: encapsulation primitive_type TK_IDENTIFICADOR optional_vector_modifier .

    $default  reduce using rule 10 (type_field)


State 162

   53 condition_command: TK_PR_IF '(' expression ')' . TK_PR_THEN body optional_else

    TK_PR_THEN  shift, and go to state 182


State 163

   58 iteration_command: TK_PR_WHILE '(' expression ')' . TK_PR_DO body

    TK_PR_DO  shift, and go to state 183


State 164

   59 iteration_command: TK_PR_DO body TK_PR_WHILE '(' . expression ')'

    TK_LIT_INT        shift, and go to state 68
    TK_LIT_FLOAT      shift, and go to state 69
    TK_LIT_FALSE      shift, and go to state 70
    TK_LIT_TRUE       shift, and go to state 71
    TK_LIT_CHAR       shift, and go to state 72
    TK_LIT_STRING     shift, and go to state 73
    TK_IDENTIFICADOR  shift, and go to state 74
    '('               shift, and go to state 75
    '+'               shift, and go to state 76
    '-'               shift, and go to state 77

    expression               go to state 184
    literal                  go to state 79
    unary_arit_log_operator  go to state 80


State 165

   77 expression: expression . arit_log_operator expression
   89 optional_array_modifier: '[' expression . ']'

    TK_OC_LE   shift, and go to state 121
    TK_OC_GE   shift, and go to state 122
    TK_OC_EQ   shift, and go to state 123
    TK_OC_NE   shift, and go to state 124
    TK_OC_AND  shift, and go to state 125
    TK_OC_OR   shift, and go to state 126
    ']'        shift, and go to state 185
    '+'        shift, and go to state 127
    '-'        shift, and go to state 128
    '/'        shift, and go to state 129
    '*'        shift, and go to state 130

    arit_log_operator  go to state 131
    log_operator       go to state 132
    arit_operator      go to state 133


State 166

   75 expression: '(' expression ')' .

    $default  reduce using rule 75 (expression)


State 167

   77 expression: expression . arit_log_operator expression
   77           | expression arit_log_operator expression .

    TK_OC_LE   shift, and go to state 121
    TK_OC_GE   shift, and go to state 122
    TK_OC_EQ   shift, and go to state 123
    TK_OC_NE   shift, and go to state 124
    TK_OC_AND  shift, and go to state 125
    TK_OC_OR   shift, and go to state 126
    '+'        shift, and go to state 127
    '-'        shift, and go to state 128
    '/'        shift, and go to state 129
    '*'        shift, and go to state 130

    TK_OC_LE   [reduce using rule 77 (expression)]
    TK_OC_GE   [reduce using rule 77 (expression)]
    TK_OC_EQ   [reduce using rule 77 (expression)]
    TK_OC_NE   [reduce using rule 77 (expression)]
    TK_OC_AND  [reduce using rule 77 (expression)]
    TK_OC_OR   [reduce using rule 77 (expression)]
    '+'        [reduce using rule 77 (expression)]
    '-'        [reduce using rule 77 (expression)]
    '/'        [reduce using rule 77 (expression)]
    '*'        [reduce using rule 77 (expression)]
    $default   reduce using rule 77 (expression)

    arit_log_operator  go to state 131
    log_operator       go to state 132
    arit_operator      go to state 133


State 168

   72 expression_sequence: ',' expression_sequence .

    $default  reduce using rule 72 (expression_sequence)


State 169

   73 expression_sequence: expression expression_sequence .

    $default  reduce using rule 73 (expression_sequence)


State 170

   56 iteration_command: TK_PR_FOREACH '(' TK_IDENTIFICADOR ':' . foreach_expression_sequence ')' body

    TK_LIT_INT        shift, and go to state 68
    TK_LIT_FLOAT      shift, and go to state 69
    TK_LIT_FALSE      shift, and go to state 70
    TK_LIT_TRUE       shift, and go to state 71
    TK_LIT_CHAR       shift, and go to state 72
    TK_LIT_STRING     shift, and go to state 73
    TK_IDENTIFICADOR  shift, and go to state 74
    '('               shift, and go to state 75
    '+'               shift, and go to state 76
    '-'               shift, and go to state 77

    foreach_expression_sequence  go to state 186
    expression                   go to state 187
    literal                      go to state 79
    unary_arit_log_operator      go to state 80


State 171

   63 optional_extra_for_commands: ',' . simple_command optional_extra_for_commands

    TK_PR_IF          shift, and go to state 32
    TK_PR_WHILE       shift, and go to state 33
    TK_PR_DO          shift, and go to state 34
    TK_PR_INPUT       shift, and go to state 35
    TK_PR_OUTPUT      shift, and go to state 36
    TK_PR_STATIC      shift, and go to state 1
    TK_PR_FOREACH     shift, and go to state 38
    TK_PR_FOR         shift, and go to state 39
    TK_PR_SWITCH      shift, and go to state 40
    TK_IDENTIFICADOR  shift, and go to state 44
    '{'               shift, and go to state 23

    TK_IDENTIFICADOR  [reduce using rule 36 (optional_static)]
    $default          reduce using rule 36 (optional_static)

    body               go to state 45
    simple_command     go to state 188
    def_local_var      go to state 49
    optional_static    go to state 50
    input_command      go to state 51
    output_command     go to state 52
    flux_command       go to state 53
    condition_command  go to state 54
    iteration_command  go to state 55
    selection_command  go to state 56


State 172

   61 for_command_sequence: simple_command optional_extra_for_commands .

    $default  reduce using rule 61 (for_command_sequence)


State 173

   57 iteration_command: TK_PR_FOR '(' for_command_sequence ':' . expression ':' for_command_sequence ')' body

    TK_LIT_INT        shift, and go to state 68
    TK_LIT_FLOAT      shift, and go to state 69
    TK_LIT_FALSE      shift, and go to state 70
    TK_LIT_TRUE       shift, and go to state 71
    TK_LIT_CHAR       shift, and go to state 72
    TK_LIT_STRING     shift, and go to state 73
    TK_IDENTIFICADOR  shift, and go to state 74
    '('               shift, and go to state 75
    '+'               shift, and go to state 76
    '-'               shift, and go to state 77

    expression               go to state 189
    literal                  go to state 79
    unary_arit_log_operator  go to state 80


State 174

   60 selection_command: TK_PR_SWITCH '(' expression ')' . body

    '{'  shift, and go to state 23

    body  go to state 190


State 175

   43 attribution_command: '[' expression ']' . '=' expression

    '='  shift, and go to state 191


State 176

   47 func_modifier: '(' expression_sequence ')' .

    $default  reduce using rule 47 (func_modifier)


State 177

   44 attribution_command: '$' TK_IDENTIFICADOR '=' . expression

    TK_LIT_INT        shift, and go to state 68
    TK_LIT_FLOAT      shift, and go to state 69
    TK_LIT_FALSE      shift, and go to state 70
    TK_LIT_TRUE       shift, and go to state 71
    TK_LIT_CHAR       shift, and go to state 72
    TK_LIT_STRING     shift, and go to state 73
    TK_IDENTIFICADOR  shift, and go to state 74
    '('               shift, and go to state 75
    '+'               shift, and go to state 76
    '-'               shift, and go to state 77

    expression               go to state 192
    literal                  go to state 79
    unary_arit_log_operator  go to state 80


State 178

   34 def_local_var_tail: TK_IDENTIFICADOR TK_IDENTIFICADOR .

    $default  reduce using rule 34 (def_local_var_tail)


State 179

   35 def_local_var_tail: primitive_type TK_IDENTIFICADOR . optional_init

    TK_OC_LE  shift, and go to state 193

    $default  reduce using rule 40 (optional_init)

    optional_init  go to state 194


State 180

  107 parameter: optional_const any_type TK_IDENTIFICADOR .

    $default  reduce using rule 107 (parameter)


State 181

  108 optional_more_parameters: ',' parameter . optional_more_parameters

    ','  shift, and go to state 158

    $default  reduce using rule 109 (optional_more_parameters)

    optional_more_parameters  go to state 195


State 182

   53 condition_command: TK_PR_IF '(' expression ')' TK_PR_THEN . body optional_else

    '{'  shift, and go to state 23

    body  go to state 196


State 183

   58 iteration_command: TK_PR_WHILE '(' expression ')' TK_PR_DO . body

    '{'  shift, and go to state 23

    body  go to state 197


State 184

   59 iteration_command: TK_PR_DO body TK_PR_WHILE '(' expression . ')'
   77 expression: expression . arit_log_operator expression

    TK_OC_LE   shift, and go to state 121
    TK_OC_GE   shift, and go to state 122
    TK_OC_EQ   shift, and go to state 123
    TK_OC_NE   shift, and go to state 124
    TK_OC_AND  shift, and go to state 125
    TK_OC_OR   shift, and go to state 126
    ')'        shift, and go to state 198
    '+'        shift, and go to state 127
    '-'        shift, and go to state 128
    '/'        shift, and go to state 129
    '*'        shift, and go to state 130

    arit_log_operator  go to state 131
    log_operator       go to state 132
    arit_operator      go to state 133


State 185

   89 optional_array_modifier: '[' expression ']' .

    $default  reduce using rule 89 (optional_array_modifier)


State 186

   56 iteration_command: TK_PR_FOREACH '(' TK_IDENTIFICADOR ':' foreach_expression_sequence . ')' body

    ')'  shift, and go to state 199


State 187

   64 foreach_expression_sequence: expression . optional_extra_foreach_expressions
   77 expression: expression . arit_log_operator expression

    TK_OC_LE   shift, and go to state 121
    TK_OC_GE   shift, and go to state 122
    TK_OC_EQ   shift, and go to state 123
    TK_OC_NE   shift, and go to state 124
    TK_OC_AND  shift, and go to state 125
    TK_OC_OR   shift, and go to state 126
    ','        shift, and go to state 200
    '+'        shift, and go to state 127
    '-'        shift, and go to state 128
    '/'        shift, and go to state 129
    '*'        shift, and go to state 130

    $default  reduce using rule 65 (optional_extra_foreach_expressions)

    optional_extra_foreach_expressions  go to state 201
    arit_log_operator                   go to state 131
    log_operator                        go to state 132
    arit_operator                       go to state 133


State 188

   63 optional_extra_for_commands: ',' simple_command . optional_extra_for_commands

    ','  shift, and go to state 171

    $default  reduce using rule 62 (optional_extra_for_commands)

    optional_extra_for_commands  go to state 202


State 189

   57 iteration_command: TK_PR_FOR '(' for_command_sequence ':' expression . ':' for_command_sequence ')' body
   77 expression: expression . arit_log_operator expression

    TK_OC_LE   shift, and go to state 121
    TK_OC_GE   shift, and go to state 122
    TK_OC_EQ   shift, and go to state 123
    TK_OC_NE   shift, and go to state 124
    TK_OC_AND  shift, and go to state 125
    TK_OC_OR   shift, and go to state 126
    ':'        shift, and go to state 203
    '+'        shift, and go to state 127
    '-'        shift, and go to state 128
    '/'        shift, and go to state 129
    '*'        shift, and go to state 130

    arit_log_operator  go to state 131
    log_operator       go to state 132
    arit_operator      go to state 133


State 190

   60 selection_command: TK_PR_SWITCH '(' expression ')' body .

    $default  reduce using rule 60 (selection_command)


State 191

   43 attribution_command: '[' expression ']' '=' . expression

    TK_LIT_INT        shift, and go to state 68
    TK_LIT_FLOAT      shift, and go to state 69
    TK_LIT_FALSE      shift, and go to state 70
    TK_LIT_TRUE       shift, and go to state 71
    TK_LIT_CHAR       shift, and go to state 72
    TK_LIT_STRING     shift, and go to state 73
    TK_IDENTIFICADOR  shift, and go to state 74
    '('               shift, and go to state 75
    '+'               shift, and go to state 76
    '-'               shift, and go to state 77

    expression               go to state 204
    literal                  go to state 79
    unary_arit_log_operator  go to state 80


State 192

   44 attribution_command: '$' TK_IDENTIFICADOR '=' expression .
   77 expression: expression . arit_log_operator expression

    TK_OC_LE   shift, and go to state 121
    TK_OC_GE   shift, and go to state 122
    TK_OC_EQ   shift, and go to state 123
    TK_OC_NE   shift, and go to state 124
    TK_OC_AND  shift, and go to state 125
    TK_OC_OR   shift, and go to state 126
    '+'        shift, and go to state 127
    '-'        shift, and go to state 128
    '/'        shift, and go to state 129
    '*'        shift, and go to state 130

    $default  reduce using rule 44 (attribution_command)

    arit_log_operator  go to state 131
    log_operator       go to state 132
    arit_operator      go to state 133


State 193

   41 optional_init: TK_OC_LE . expression

    TK_LIT_INT        shift, and go to state 68
    TK_LIT_FLOAT      shift, and go to state 69
    TK_LIT_FALSE      shift, and go to state 70
    TK_LIT_TRUE       shift, and go to state 71
    TK_LIT_CHAR       shift, and go to state 72
    TK_LIT_STRING     shift, and go to state 73
    TK_IDENTIFICADOR  shift, and go to state 74
    '('               shift, and go to state 75
    '+'               shift, and go to state 76
    '-'               shift, and go to state 77

    expression               go to state 205
    literal                  go to state 79
    unary_arit_log_operator  go to state 80


State 194

   35 def_local_var_tail: primitive_type TK_IDENTIFICADOR optional_init .

    $default  reduce using rule 35 (def_local_var_tail)


State 195

  108 optional_more_parameters: ',' parameter optional_more_parameters .

    $default  reduce using rule 108 (optional_more_parameters)


State 196

   53 condition_command: TK_PR_IF '(' expression ')' TK_PR_THEN body . optional_else

    TK_PR_ELSE  shift, and go to state 206

    $default  reduce using rule 54 (optional_else)

    optional_else  go to state 207


State 197

   58 iteration_command: TK_PR_WHILE '(' expression ')' TK_PR_DO body .

    $default  reduce using rule 58 (iteration_command)


State 198

   59 iteration_command: TK_PR_DO body TK_PR_WHILE '(' expression ')' .

    $default  reduce using rule 59 (iteration_command)


State 199

   56 iteration_command: TK_PR_FOREACH '(' TK_IDENTIFICADOR ':' foreach_expression_sequence ')' . body

    '{'  shift, and go to state 23

    body  go to state 208


State 200

   66 optional_extra_foreach_expressions: ',' . expression optional_extra_foreach_expressions

    TK_LIT_INT        shift, and go to state 68
    TK_LIT_FLOAT      shift, and go to state 69
    TK_LIT_FALSE      shift, and go to state 70
    TK_LIT_TRUE       shift, and go to state 71
    TK_LIT_CHAR       shift, and go to state 72
    TK_LIT_STRING     shift, and go to state 73
    TK_IDENTIFICADOR  shift, and go to state 74
    '('               shift, and go to state 75
    '+'               shift, and go to state 76
    '-'               shift, and go to state 77

    expression               go to state 209
    literal                  go to state 79
    unary_arit_log_operator  go to state 80


State 201

   64 foreach_expression_sequence: expression optional_extra_foreach_expressions .

    $default  reduce using rule 64 (foreach_expression_sequence)


State 202

   63 optional_extra_for_commands: ',' simple_command optional_extra_for_commands .

    $default  reduce using rule 63 (optional_extra_for_commands)


State 203

   57 iteration_command: TK_PR_FOR '(' for_command_sequence ':' expression ':' . for_command_sequence ')' body

    TK_PR_IF          shift, and go to state 32
    TK_PR_WHILE       shift, and go to state 33
    TK_PR_DO          shift, and go to state 34
    TK_PR_INPUT       shift, and go to state 35
    TK_PR_OUTPUT      shift, and go to state 36
    TK_PR_STATIC      shift, and go to state 1
    TK_PR_FOREACH     shift, and go to state 38
    TK_PR_FOR         shift, and go to state 39
    TK_PR_SWITCH      shift, and go to state 40
    TK_IDENTIFICADOR  shift, and go to state 44
    '{'               shift, and go to state 23

    TK_IDENTIFICADOR  [reduce using rule 36 (optional_static)]
    $default          reduce using rule 36 (optional_static)

    body                  go to state 45
    simple_command        go to state 142
    def_local_var         go to state 49
    optional_static       go to state 50
    input_command         go to state 51
    output_command        go to state 52
    flux_command          go to state 53
    condition_command     go to state 54
    iteration_command     go to state 55
    selection_command     go to state 56
    for_command_sequence  go to state 210


State 204

   43 attribution_command: '[' expression ']' '=' expression .
   77 expression: expression . arit_log_operator expression

    TK_OC_LE   shift, and go to state 121
    TK_OC_GE   shift, and go to state 122
    TK_OC_EQ   shift, and go to state 123
    TK_OC_NE   shift, and go to state 124
    TK_OC_AND  shift, and go to state 125
    TK_OC_OR   shift, and go to state 126
    '+'        shift, and go to state 127
    '-'        shift, and go to state 128
    '/'        shift, and go to state 129
    '*'        shift, and go to state 130

    $default  reduce using rule 43 (attribution_command)

    arit_log_operator  go to state 131
    log_operator       go to state 132
    arit_operator      go to state 133


State 205

   41 optional_init: TK_OC_LE expression .
   77 expression: expression . arit_log_operator expression

    TK_OC_LE   shift, and go to state 121
    TK_OC_GE   shift, and go to state 122
    TK_OC_EQ   shift, and go to state 123
    TK_OC_NE   shift, and go to state 124
    TK_OC_AND  shift, and go to state 125
    TK_OC_OR   shift, and go to state 126
    '+'        shift, and go to state 127
    '-'        shift, and go to state 128
    '/'        shift, and go to state 129
    '*'        shift, and go to state 130

    $default  reduce using rule 41 (optional_init)

    arit_log_operator  go to state 131
    log_operator       go to state 132
    arit_operator      go to state 133


State 206

   55 optional_else: TK_PR_ELSE . body

    '{'  shift, and go to state 23

    body  go to state 211


State 207

   53 condition_command: TK_PR_IF '(' expression ')' TK_PR_THEN body optional_else .

    $default  reduce using rule 53 (condition_command)


State 208

   56 iteration_command: TK_PR_FOREACH '(' TK_IDENTIFICADOR ':' foreach_expression_sequence ')' body .

    $default  reduce using rule 56 (iteration_command)


State 209

   66 optional_extra_foreach_expressions: ',' expression . optional_extra_foreach_expressions
   77 expression: expression . arit_log_operator expression

    TK_OC_LE   shift, and go to state 121
    TK_OC_GE   shift, and go to state 122
    TK_OC_EQ   shift, and go to state 123
    TK_OC_NE   shift, and go to state 124
    TK_OC_AND  shift, and go to state 125
    TK_OC_OR   shift, and go to state 126
    ','        shift, and go to state 200
    '+'        shift, and go to state 127
    '-'        shift, and go to state 128
    '/'        shift, and go to state 129
    '*'        shift, and go to state 130

    $default  reduce using rule 65 (optional_extra_foreach_expressions)

    optional_extra_foreach_expressions  go to state 212
    arit_log_operator                   go to state 131
    log_operator                        go to state 132
    arit_operator                       go to state 133


State 210

   57 iteration_command: TK_PR_FOR '(' for_command_sequence ':' expression ':' for_command_sequence . ')' body

    ')'  shift, and go to state 213


State 211

   55 optional_else: TK_PR_ELSE body .

    $default  reduce using rule 55 (optional_else)


State 212

   66 optional_extra_foreach_expressions: ',' expression optional_extra_foreach_expressions .

    $default  reduce using rule 66 (optional_extra_foreach_expressions)


State 213

   57 iteration_command: TK_PR_FOR '(' for_command_sequence ':' expression ':' for_command_sequence ')' . body

    '{'  shift, and go to state 23

    body  go to state 214


State 214

   57 iteration_command: TK_PR_FOR '(' for_command_sequence ':' expression ':' for_command_sequence ')' body .

    $default  reduce using rule 57 (iteration_command)
